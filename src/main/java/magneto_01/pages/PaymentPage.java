package magneto_01.pages;

import magneto_01.utils.AutoGeneratedData;
import magneto_01.utils.Utils;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;

import static magneto_01.utils.AutoGeneratedData.getShippingData;
import static org.junit.Assert.assertEquals;

public class PaymentPage {

    @FindBy(xpath = "//span[text()='Place Order']")
    private WebElement placeOrderButton;

    private WebDriver driver;

    private Utils utils;

    public PaymentPage(WebDriver driver) {
        this.driver = driver;
        PageFactory.initElements(driver, this);
        utils = new Utils(driver);
    }

    // Unfortunately I didn't manage to finish this part...
    public void validateShippingInfoOnPaymentPage() {
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));

        AutoGeneratedData.ShippingData shippingData = getShippingData();


//        WebElement company = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//ko[text()='" + shippingData.getCompany() + "']")));
//        assertEquals(shippingData.getCompany(), company.getText());
//
//
//
//        WebElement street1 = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//ko[text()='" + shippingData.getStreetAddress1() + "']")));
//        assertEquals(shippingData.getStreetAddress1(), street1.getText());
//
//
//        WebElement street2 = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//ko[text()='" + shippingData.getStreetAddress2() + "']")));
//        assertEquals(shippingData.getStreetAddress2(), street2.getText());
//
//
//        WebElement street3 = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//ko[text()='" + shippingData.getStreetAddress3() + "']")));
//        assertEquals(shippingData.getStreetAddress3(), street3.getText());
//
//
//        WebElement city = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//ko[text()='" + shippingData.getCity() + "']")));
//        assertEquals(shippingData.getCity(), city.getText());
//
//
//        WebElement state = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//span[text()='" + shippingData.getState() + "']")));
//        assertEquals(shippingData.getState(), state.getText());
//
//
//        WebElement postalCode = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//ko[text()='" + shippingData.getZipCode() + "']")));
//        assertEquals(shippingData.getZipCode(), postalCode.getText());
//
//
//        WebElement country = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//ko[text()='" + shippingData.getCountry() + "']")));
//        assertEquals(shippingData.getCountry(), country.getText());
//
//
//        WebElement phoneNumber = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//a[text()='" + shippingData.getPhoneNumber() + "']")));
//        assertEquals(shippingData.getPhoneNumber(), phoneNumber.getText());

    }

    public void userCompletesTheCheckoutProcessAndPlacesTheOrder() {
        utils.clickOnElement(placeOrderButton);

    }

    public void theOrderShouldBeConfirmed() {

        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));

        WebElement successContainer = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("div.checkout-success")));

        WebElement orderNumberElement = driver.findElement(By.cssSelector("a.order-number strong"));
        String orderNumber = orderNumberElement.getText();
        System.out.println("Order Number: " + orderNumber);

        if (orderNumber == null || !orderNumber.matches("\\d+")) {
            throw new AssertionError("Order number not found or invalid: " + orderNumber);
        }
    }
}