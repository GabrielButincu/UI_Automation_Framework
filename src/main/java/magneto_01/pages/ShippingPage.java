package magneto_01.pages;

import magneto_01.utils.AutoGeneratedData;
import magneto_01.utils.Utils;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;

import static magneto_01.utils.AutoGeneratedData.setShippingData;

public class ShippingPage {

    @FindBy(xpath = "//img[@alt='Loading...']")
    private WebElement loadingCircle;

    @FindBy(xpath = "//following-sibling::div//input[@name='company']")
    private WebElement companyInputField;

    @FindBy(xpath = "//input[@name='street[0]']")
    private WebElement firstAddressInputField;

    @FindBy(xpath = "//input[@name='street[1]']")
    private WebElement secondAddressInputField;

    @FindBy(xpath = "//input[@name='street[2]']")
    private WebElement thirdAddressInputField;

    @FindBy(xpath = "//following-sibling::div//input[@name='city']")
    private WebElement cityInputField;

    @FindBy(css = "select[name='region_id']")
    private WebElement stateDropdown;

    @FindBy(xpath = "//following-sibling::div//input[@name='postcode']")
    private WebElement postalCodeInputField;

    @FindBy(css = "option[data-title='Bucure≈üti']")
    private WebElement bucharestStateDropdownOption;

    @FindBy(css = "select[name='country_id']")
    private WebElement countryDropdown;

    @FindBy(css = "option[value='RO']")
    private WebElement countryRomaniaDropdownOption;

    @FindBy(xpath = "//following-sibling::div//input[@name='telephone']")
    private WebElement phoneNumberInputField;

    @FindBy(xpath = "//div[@id='shipping-method-buttons-container']//button[@type='submit']")
    private WebElement nextButton;

    private WebDriver driver;

    private Utils utils;

    private AutoGeneratedData.ShippingData shippingData;

    public ShippingPage(WebDriver driver) {
        this.driver = driver;
        PageFactory.initElements(driver, this);
        utils = new Utils(driver);
    }

    public void userCompletesTheShippingDetails() {
        utils.waitForElementToDissapear(loadingCircle);
        AutoGeneratedData.ShippingData data = AutoGeneratedData.generateShippingData();

        setShippingData(data);

        utils.typeTextIntoElement(companyInputField, data.getCompany());
        utils.typeTextIntoElement(firstAddressInputField, data.getStreetAddress1());
        utils.typeTextIntoElement(secondAddressInputField, data.getStreetAddress2());
        utils.typeTextIntoElement(thirdAddressInputField, data.getStreetAddress3());
        utils.typeTextIntoElement(cityInputField, data.getCity());
        utils.selectOptionFromAutocompleteDropdown(countryDropdown, countryRomaniaDropdownOption);
        utils.selectOptionFromAutocompleteDropdown(stateDropdown, bucharestStateDropdownOption);
        utils.typeTextIntoElement(postalCodeInputField, data.getZipCode());
        utils.typeTextIntoElement(phoneNumberInputField, data.getPhoneNumber());
        utils.clickOnElement(postalCodeInputField);
        utils.waitForElementToBeDisplayed(loadingCircle, 10);
        utils.waitForElementToDissapear(loadingCircle);
    }

    public void userProceedsToThePaymentPage() {
        utils.clickOnElement(nextButton);
        utils.checkPageTitle("Checkout");
    }
}
